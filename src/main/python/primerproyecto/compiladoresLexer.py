# Generated from /home/fabri/Escritorio/dhs/proyecto/primerproyecto/src/main/python/primerproyecto/compiladores.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,38,230,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,
        1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,
        1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,16,1,17,1,17,1,18,1,18,1,19,
        1,19,1,19,1,20,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,22,1,23,1,23,
        3,23,136,8,23,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,
        1,25,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,28,1,28,
        1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,
        1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,33,1,33,1,33,
        1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,36,
        1,36,3,36,201,8,36,1,36,1,36,1,36,5,36,206,8,36,10,36,12,36,209,
        9,36,1,37,4,37,212,8,37,11,37,12,37,213,1,38,4,38,217,8,38,11,38,
        12,38,218,1,38,1,38,4,38,223,8,38,11,38,12,38,224,1,39,1,39,1,39,
        1,39,0,0,40,1,0,3,0,5,1,7,2,9,3,11,4,13,5,15,6,17,7,19,8,21,9,23,
        10,25,11,27,12,29,13,31,14,33,15,35,16,37,17,39,18,41,19,43,20,45,
        21,47,22,49,23,51,24,53,25,55,26,57,27,59,28,61,29,63,30,65,31,67,
        32,69,33,71,34,73,35,75,36,77,37,79,38,1,0,3,2,0,65,90,97,122,1,
        0,48,57,3,0,9,10,13,13,32,32,235,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,
        0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,
        0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,
        0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,
        0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,
        0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,
        0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,
        0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,
        0,0,1,81,1,0,0,0,3,83,1,0,0,0,5,85,1,0,0,0,7,87,1,0,0,0,9,89,1,0,
        0,0,11,91,1,0,0,0,13,93,1,0,0,0,15,95,1,0,0,0,17,97,1,0,0,0,19,99,
        1,0,0,0,21,101,1,0,0,0,23,103,1,0,0,0,25,105,1,0,0,0,27,107,1,0,
        0,0,29,109,1,0,0,0,31,111,1,0,0,0,33,114,1,0,0,0,35,117,1,0,0,0,
        37,119,1,0,0,0,39,121,1,0,0,0,41,124,1,0,0,0,43,127,1,0,0,0,45,130,
        1,0,0,0,47,135,1,0,0,0,49,137,1,0,0,0,51,141,1,0,0,0,53,148,1,0,
        0,0,55,153,1,0,0,0,57,158,1,0,0,0,59,165,1,0,0,0,61,170,1,0,0,0,
        63,176,1,0,0,0,65,180,1,0,0,0,67,183,1,0,0,0,69,188,1,0,0,0,71,195,
        1,0,0,0,73,200,1,0,0,0,75,211,1,0,0,0,77,216,1,0,0,0,79,226,1,0,
        0,0,81,82,7,0,0,0,82,2,1,0,0,0,83,84,7,1,0,0,84,4,1,0,0,0,85,86,
        5,40,0,0,86,6,1,0,0,0,87,88,5,41,0,0,88,8,1,0,0,0,89,90,5,123,0,
        0,90,10,1,0,0,0,91,92,5,125,0,0,92,12,1,0,0,0,93,94,5,59,0,0,94,
        14,1,0,0,0,95,96,5,46,0,0,96,16,1,0,0,0,97,98,5,44,0,0,98,18,1,0,
        0,0,99,100,5,43,0,0,100,20,1,0,0,0,101,102,5,45,0,0,102,22,1,0,0,
        0,103,104,5,42,0,0,104,24,1,0,0,0,105,106,5,47,0,0,106,26,1,0,0,
        0,107,108,5,37,0,0,108,28,1,0,0,0,109,110,5,61,0,0,110,30,1,0,0,
        0,111,112,5,38,0,0,112,113,5,38,0,0,113,32,1,0,0,0,114,115,5,124,
        0,0,115,116,5,124,0,0,116,34,1,0,0,0,117,118,5,60,0,0,118,36,1,0,
        0,0,119,120,5,62,0,0,120,38,1,0,0,0,121,122,5,61,0,0,122,123,5,61,
        0,0,123,40,1,0,0,0,124,125,5,60,0,0,125,126,5,61,0,0,126,42,1,0,
        0,0,127,128,5,62,0,0,128,129,5,61,0,0,129,44,1,0,0,0,130,131,5,61,
        0,0,131,132,5,33,0,0,132,46,1,0,0,0,133,136,3,75,37,0,134,136,3,
        77,38,0,135,133,1,0,0,0,135,134,1,0,0,0,136,48,1,0,0,0,137,138,5,
        105,0,0,138,139,5,110,0,0,139,140,5,116,0,0,140,50,1,0,0,0,141,142,
        5,100,0,0,142,143,5,111,0,0,143,144,5,117,0,0,144,145,5,98,0,0,145,
        146,5,108,0,0,146,147,5,101,0,0,147,52,1,0,0,0,148,149,5,108,0,0,
        149,150,5,111,0,0,150,151,5,110,0,0,151,152,5,103,0,0,152,54,1,0,
        0,0,153,154,5,99,0,0,154,155,5,104,0,0,155,156,5,97,0,0,156,157,
        5,114,0,0,157,56,1,0,0,0,158,159,5,115,0,0,159,160,5,116,0,0,160,
        161,5,114,0,0,161,162,5,105,0,0,162,163,5,110,0,0,163,164,5,103,
        0,0,164,58,1,0,0,0,165,166,5,118,0,0,166,167,5,111,0,0,167,168,5,
        105,0,0,168,169,5,100,0,0,169,60,1,0,0,0,170,171,5,119,0,0,171,172,
        5,104,0,0,172,173,5,105,0,0,173,174,5,108,0,0,174,175,5,101,0,0,
        175,62,1,0,0,0,176,177,5,102,0,0,177,178,5,111,0,0,178,179,5,114,
        0,0,179,64,1,0,0,0,180,181,5,105,0,0,181,182,5,102,0,0,182,66,1,
        0,0,0,183,184,5,101,0,0,184,185,5,108,0,0,185,186,5,115,0,0,186,
        187,5,101,0,0,187,68,1,0,0,0,188,189,5,114,0,0,189,190,5,101,0,0,
        190,191,5,116,0,0,191,192,5,117,0,0,192,193,5,114,0,0,193,194,5,
        110,0,0,194,70,1,0,0,0,195,196,5,100,0,0,196,197,5,111,0,0,197,72,
        1,0,0,0,198,201,3,1,0,0,199,201,5,95,0,0,200,198,1,0,0,0,200,199,
        1,0,0,0,201,207,1,0,0,0,202,206,3,1,0,0,203,206,3,3,1,0,204,206,
        5,95,0,0,205,202,1,0,0,0,205,203,1,0,0,0,205,204,1,0,0,0,206,209,
        1,0,0,0,207,205,1,0,0,0,207,208,1,0,0,0,208,74,1,0,0,0,209,207,1,
        0,0,0,210,212,3,3,1,0,211,210,1,0,0,0,212,213,1,0,0,0,213,211,1,
        0,0,0,213,214,1,0,0,0,214,76,1,0,0,0,215,217,3,3,1,0,216,215,1,0,
        0,0,217,218,1,0,0,0,218,216,1,0,0,0,218,219,1,0,0,0,219,220,1,0,
        0,0,220,222,3,15,7,0,221,223,3,3,1,0,222,221,1,0,0,0,223,224,1,0,
        0,0,224,222,1,0,0,0,224,225,1,0,0,0,225,78,1,0,0,0,226,227,7,2,0,
        0,227,228,1,0,0,0,228,229,6,39,0,0,229,80,1,0,0,0,8,0,135,200,205,
        207,213,218,224,1,6,0,0
    ]

class compiladoresLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    PA = 1
    PC = 2
    LLA = 3
    LLC = 4
    PYC = 5
    PUNTO = 6
    COMA = 7
    SUMA = 8
    RESTA = 9
    MULT = 10
    DIV = 11
    MOD = 12
    ASIG = 13
    AND = 14
    OR = 15
    MENOR = 16
    MAYOR = 17
    IGUAL = 18
    MENORIG = 19
    MAYORIG = 20
    DIF = 21
    NUMERO = 22
    INT = 23
    DOUBLE = 24
    LONG = 25
    CHAR = 26
    STRING = 27
    VOID = 28
    WHILE = 29
    FOR = 30
    IF = 31
    ELSE = 32
    RETURN = 33
    DO = 34
    ID = 35
    ENTERO = 36
    DECIMAL = 37
    WS = 38

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'{'", "'}'", "';'", "'.'", "','", "'+'", "'-'", 
            "'*'", "'/'", "'%'", "'='", "'&&'", "'||'", "'<'", "'>'", "'=='", 
            "'<='", "'>='", "'=!'", "'int'", "'double'", "'long'", "'char'", 
            "'string'", "'void'", "'while'", "'for'", "'if'", "'else'", 
            "'return'", "'do'" ]

    symbolicNames = [ "<INVALID>",
            "PA", "PC", "LLA", "LLC", "PYC", "PUNTO", "COMA", "SUMA", "RESTA", 
            "MULT", "DIV", "MOD", "ASIG", "AND", "OR", "MENOR", "MAYOR", 
            "IGUAL", "MENORIG", "MAYORIG", "DIF", "NUMERO", "INT", "DOUBLE", 
            "LONG", "CHAR", "STRING", "VOID", "WHILE", "FOR", "IF", "ELSE", 
            "RETURN", "DO", "ID", "ENTERO", "DECIMAL", "WS" ]

    ruleNames = [ "LETRA", "DIGITO", "PA", "PC", "LLA", "LLC", "PYC", "PUNTO", 
                  "COMA", "SUMA", "RESTA", "MULT", "DIV", "MOD", "ASIG", 
                  "AND", "OR", "MENOR", "MAYOR", "IGUAL", "MENORIG", "MAYORIG", 
                  "DIF", "NUMERO", "INT", "DOUBLE", "LONG", "CHAR", "STRING", 
                  "VOID", "WHILE", "FOR", "IF", "ELSE", "RETURN", "DO", 
                  "ID", "ENTERO", "DECIMAL", "WS" ]

    grammarFileName = "compiladores.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


